#include <iostream>
#include <cstring>
#include <bitset>
#include <vector>
#include <map>

#include <math.h>
#include <limits.h>
#include <stdio.h>
#include <stdint.h>
#include <stdlib.h>
#include <getopt.h>
#include <fcntl.h>
#include <signal.h>

#include "include/Parser.h"

static char *prog;
static char fname[64];

static void usage(void) 
{
	printf("%s -f qasmfile\n", prog);
	exit(0);
}

static void sig_handler(int sig)
{
	printf ("signal(%d) catched..\n", sig);
	exit(0);
}

int main(int argc, char **argv)
{
	struct sigaction sa;
	int c;

	prog = argv[0];
	memset(fname, 0, sizeof(fname));

	memset(&sa, 0, sizeof(struct sigaction));
    sa.sa_handler = sig_handler;
    sigemptyset(&sa.sa_mask);
    sa.sa_flags = 0;

	sigaction(SIGABRT, &sa, NULL);

	while ((c = getopt_long(argc, argv, "f:", NULL, NULL)) != -1) {
		switch(c) {
		case 'f':
			if(!optarg) 
				usage();
			strcpy(fname, optarg);
			break;
		default:
			usage();
			break;
		}
	}

	if(strlen(fname) == 0) {
		usage();
	}

	Parser *parser = new Parser(fname);
	parser->parse();
	parser->run();
}
